<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--开启注释-->
    <context:component-scan base-package="com.wp"></context:component-scan>


    <!--整合hibernate-->
    <!--直接读取配置文件的方法
    <bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" name="sessionFactory">
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
    </bean>
    -->
    <!--在bean中自己配置
        并将C3p0插入-->
    <bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" name="sessionFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="mappingDirectoryLocations" value="classpath:com/wp/domain"/>
    </bean>

    <!--配置C3p0连接池-->
    <!--读取db.properties配置文件-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" name="dataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--添加事务-->
    <!--事务核心管理器-->
    <bean class="org.springframework.orm.hibernate5.HibernateTransactionManager" name="transactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!--配置通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!--织入事务-->
    <aop:config>
        <aop:pointcut id="txPc" expression="execution(* com.wp.service.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"></aop:advisor>
    </aop:config>


    <!--整合struts-->
    <bean name="userAction" class="com.wp.web.action.UserAction" scope="prototype">
        <property name="userService" ref="userService"></property>
    </bean>

    <bean name="userService" class="com.wp.service.UserService">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <bean name="userDao" class="com.wp.dao.UserDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean name="customerAction" class="com.wp.web.action.CustomerAction" scope="prototype">
        <property name="customerService" ref="customerService"></property>
    </bean>
    <bean class="com.wp.service.CustomerService" name="customerService">
        <property name="customerDao" ref="customerDao"></property>
    </bean>
    <bean class="com.wp.dao.CustomerDao" name="customerDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
</beans>